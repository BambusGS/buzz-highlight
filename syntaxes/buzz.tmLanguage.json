{
  "name": "Buzz",
  "scopeName": "source.buzz",
  "fileTypes": ["bzz"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#keywords" },
    { "include": "#control" },
    { "include": "#functions" },
    { "include": "#constants" },
    { "include": "#operators" },
    { "include": "#numbers" },
    { "include": "#builtin-libraries" },
    { "include": "#variables" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.buzz",
          "match": "#.*$"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.buzz",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.buzz",
              "match": "\\\\(n|r|t|\\\\|\"|'|0|f|v|b)"
            }
          ]
        },
        {
          "name": "string.quoted.single.buzz",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.buzz",
              "match": "\\\\(n|r|t|\\\\|\"|'|0|f|v|b)"
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.declaration.buzz",
          "match": "\\b(var|include)\\b"
        },
        {
          "name": "keyword.declaration.function.buzz",
          "match": "\\bfunction\\b"
        },
        {
          "name": "keyword.control.buzz",
          "match": "\\b(return)\\b"
        },
        {
          "name": "variable.language.buzz",
          "match": "\\b(self|nil)\\b"
        }
      ]
    },
    "control": {
      "patterns": [
        {
          "name": "keyword.control.conditional.buzz",
          "match": "\\b(if|else)\\b"
        },
        {
          "name": "keyword.control.loop.buzz",
          "match": "\\b(while|for|foreach)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "meta.function.buzz",
          "match": "\\b(function)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "captures": {
            "1": { "name": "keyword.declaration.function.buzz" },
            "2": { "name": "entity.name.function.buzz" }
          }
        },
        {
          "name": "meta.function.anonymous.buzz",
          "begin": "\\b(function)\\s*\\(",
          "beginCaptures": {
            "1": { "name": "keyword.declaration.function.buzz" }
          },
          "end": "\\)",
          "patterns": [
            { "include": "#function-parameters" }
          ]
        },
        {
          "name": "meta.function-call.buzz",
          "match": "\\b(?!function\\b)([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "captures": {
            "1": { "name": "entity.name.function.buzz" }
          }
        },
        {
          "name": "support.function.buzz",
          "match": "\\b(size|foreach|map|reduce|type|log|print)\\b"
        },
        {
          "match": "\\b(math)\\.(abs|log|log2|log10|exp|sqrt|sin|cos|tan|asin|acos|atan|min|max|pi)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.math.buzz" }
          }
        },
        {
          "match": "\\b(math)\\.(rng)\\.(setseed|uniform|gaussian|exponential)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.class.buzz" },
            "3": { "name": "support.function.math.rng.buzz" }
          }
        },
        {
          "match": "\\b(math)\\.(vec2)\\.(new|newp|rotate|scale|add|length|angle|norm|sross)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.class.buzz" },
            "3": { "name": "support.function.math.vec2.buzz" }
          }
        },
        {
          "match": "\\b(math)\\.(matrix)\\.(new|identity|sub)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.class.buzz" },
            "3": { "name": "support.function.math.matrix.buzz" }
          }
        },
        {
          "match": "\\b(string)\\.(length|sub|concat|tostring|toint|tofloat)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.string.buzz" }
          }
        },
        {
          "match": "\\b(io)\\.(fopen|fclose|fsize|fforeach|fwrite|errno|error_message)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.io.buzz" }
          }
        },
        {
          "match": "\\b(swarm)\\.(create|intersection|union|difference)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.swarm.buzz" }
          }
        },
        {
          "match": "\\b(stigmergy)\\.(create|get|put|size|onconflict|onconflictlost|foreach)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.stigmergy.buzz" }
          }
        },
        {
          "match": "\\b(neighbors)\\.(get|kin|nonkin|map|reduce|filter|foreach|count|broadcast|listen|ignore)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.neighbors.buzz" }
          }
        },
        {
          "match": "\\b(queue)\\.(new|push|pop|print)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.queue.buzz" }
          }
        },
        {
          "match": "\\b(debug)\\.(print)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.function.debug.buzz" }
          }
        },
        {
          "match": "\\b(debug)\\.(trajectory)\\.(enable|disable|clear)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.class.buzz" },
            "3": { "name": "support.function.debug.trajectory.buzz" }
          }
        },
        {
          "match": "\\b(debug)\\.(rays)\\.(add|clear)\\b",
          "captures": {
            "1": { "name": "support.class.buzz" },
            "2": { "name": "support.class.buzz" },
            "3": { "name": "support.function.debug.rays.buzz" }
          }
        },
        {
          "match": "\\b(s)\\.(join|leave|select|unselect|in|exec|others|id)\\b",
          "captures": {
            "1": { "name": "variable.other.buzz" },
            "2": { "name": "support.function.swarm-instance.buzz" }
          }
        },
        {
          "match": "\\b(v)\\.(get|put|size|onconflict|onconflictlost|foreach|id)\\b",
          "captures": {
            "1": { "name": "variable.other.buzz" },
            "2": { "name": "support.function.stigmergy-instance.buzz" }
          }
        }
      ]
    },
    "function-parameters": {
      "patterns": [
        {
          "name": "variable.parameter.buzz",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "punctuation.separator.parameter.buzz",
          "match": ","
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.buzz",
          "match": "\\b(true|false|nil)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.buzz",
          "match": "="
        },
        {
          "name": "keyword.operator.arithmetic.buzz",
          "match": "\\+|\\-|\\*|/|\\^|%"
        },
        {
          "name": "keyword.operator.logical.buzz",
          "match": "\\b(and|or|not)\\b"
        },
        {
          "name": "keyword.operator.comparison.buzz",
          "match": "==|!=|<=|>=|<|>"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.buzz",
          "match": "\\b\\d+\\.\\d*\\b"
        },
        {
          "name": "constant.numeric.integer.buzz",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "builtin-libraries": {
      "patterns": [
        {
          "name": "support.class.buzz",
          "match": "\\b(math|string|io|swarm|stigmergy|neighbors|queue|debug)\\b"
        },
        {
          "name": "support.class.buzz",
          "match": "\\b(debug)\\.(trajectory|rays)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.constant.buzz",
          "match": "\\b[A-Z][A-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.property.buzz",
          "match": "\\b(distance|azimuth|elevation|x|y|z|id)\\b"
        },
        {
          "name": "variable.language.buzz",
          "match": "\\b(self|nil)\\b"
        },
        {
          "name": "variable.other.buzz",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.member.buzz",
          "match": "\\.([a-zA-Z_][a-zA-Z0-9_]*)\\b"
        }
      ]
    }
  }
}
